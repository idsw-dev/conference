---
import { SiFacebook, SiInstagram, SiThreads, SiX } from "@icons-pack/react-simple-icons";
import { Image } from "astro:assets";
import { Globe, Linkedin } from "lucide-react";
import type { Speaker } from "../@types/speakers";

interface Props {
  data: Speaker;
}

const { data }: Props = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>("../data/images/speakers/*.{png,jpg,jpeg,svg,webp}", {
  eager: true,
});
const image = Object.values(images).find((img) => img.default.src.includes(data.imageName));

if (!image) {
  throw new Error(`"${data.imageName}" does not exist in glob: "src/data/images/speakers/*.{png,jpg,jpeg,svg,webp}"`);
}
---

<div
  class="group mb-6 flex h-full flex-col overflow-hidden rounded-2xl border border-white/10 bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-sm transition-all duration-300 hover:border-white/20 hover:shadow-lg hover:shadow-blue-500/10 md:flex-row">
  <!-- Speaker Image Section -->
  <div class="min-w-60 bg-white/5 p-6">
    <div class="max-w-60 space-y-3">
      <div class="h-32 w-32 overflow-hidden rounded-lg transition-transform duration-300 group-hover:scale-105">
        <Image
          src={image.default}
          alt={data.name}
          class:list={["h-full w-full object-cover transition-all duration-300 group-hover:scale-110"]}
        />
      </div>
      <h3 class="text-xl font-bold text-white">{data.name}</h3>
      <p class="text-base text-gray-300">{data.title}</p>
      <div class="social-links">
        <ul class="flex gap-3">
          {
            data.socialUrl.map((url) => (
              <li>
                <a
                  href={url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex h-10 w-10 items-center justify-center rounded-lg bg-white/10 text-white transition-colors hover:bg-white/20 hover:text-blue-400"
                  title={url}>
                  {url.includes("x.com") || url.includes("twitter.com") ? (
                    <SiX className="h-4 w-4" client:load />
                  ) : url.includes("facebook.com") ? (
                    <SiFacebook className="h-4 w-4" client:load />
                  ) : url.includes("linkedin.com") ? (
                    <Linkedin className="h-4 w-4" client:load />
                  ) : url.includes("instagram.com") ? (
                    <SiInstagram className="h-4 w-4" client:load />
                  ) : url.includes("threads.net") ? (
                    <SiThreads className="h-4 w-4" client:load />
                  ) : (
                    <Globe className="h-4 w-4" client:load />
                  )}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </div>
  <div class="flex flex-col justify-between px-6 py-6">
    <div>
      <div class="space-y-3">
        <div class="flex gap-2">
          {
            data.talk.topics.map((topic) => (
              <span class="inline-flex items-center rounded-full bg-blue-500/20 px-3 py-1 text-xs font-semibold text-blue-300">
                {topic}
              </span>
            ))
          }
        </div>
        <h4 class="mb-3 text-xl font-semibold text-white">
          {data.talk.title}
        </h4>
        <p class="text-base text-gray-300">
          {data.talk.description}
        </p>
      </div>
    </div>
  </div>
</div>
