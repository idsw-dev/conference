---
import { Image } from "astro:assets";
import type { AgendaDetail } from "../@types/agenda";
import { imageMetadata } from "astro/assets/utils";
import defaultImage from "./../data/images/speakers/default.png";

interface Props {
  data: AgendaDetail;
}

const speakerImg: Record<string, ImageMetadata> = {};

const { data }: Props = Astro.props;
const images = await Astro.glob<{ default: ImageMetadata }>("../data/images/speakers/*.{png,jpg,jpeg,svg,webp}");

data.speakers?.forEach((speaker) => {
  let image = images.find((img) => speaker.imageName == img.default.src);
  let imageSrc;
  if (!image) imageSrc = defaultImage;
  else imageSrc = image.default;

  speakerImg[speaker.name] = imageSrc!;
});

function getSpeakerString() {
  return data.speakers?.join(", ");
}
---

<div class="event-card col-span-12 mb-8 flex bg-gradient-to-r from-[#2F4D78] to-[#28456F] text-white lg:grid-rows-1">
  <!-- {
    data.speakers?.map((speaker) => (
      <div class="event-card-image w-1/4 flex-shrink-0">
        <Image
          src={speakerImg[speaker.name]}
          alt="test"
          height={200}
          class:list={["aspect-video h-full w-full object-cover"]}
        />
      </div>
    ))
  } -->
  <!-- <div class="event-card-speaker col-span-7 col-start-5 ml-5 py-4 lg:col-span-2 lg:col-start-3 lg:ml-0">
    <h3 class="event-card-speaker-name mb-3 text-xl font-bold">
      {data.speaker.name}
    </h3>
    <p class="event-card-speaker-description font-light">
      {data.speaker.title}
    </p>
  </div> -->
  <div class="event-card-content lg:border-t-none border-t-none border-t-white border-opacity-50 p-4">
    <h3 class="event-card-title mb-3 text-xl font-bold">
      {data.title}
    </h3>
    <p class="event-card-description mb-4 leading-tight">
      {getSpeakerString()}
    </p>
    <p class="event-card-time font-medium">
      {data.time_start} - {data.time_end}
    </p>
  </div>
</div>
<style>
  @media screen and (min-width: 1024px) {
    .event-card-content {
      position: relative;
    }
  }
  @media screen and (min-width: 1400px) {
    .event-card-content::before {
      left: -2rem;
    }
  }
</style>
