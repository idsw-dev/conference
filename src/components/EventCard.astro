---
import { Image, Picture } from "astro:assets";
import type { Agenda } from "../@types/agenda";

type Props = {
  data: Agenda;
};

const { data } = Astro.props;
const imageURL = "../images" + data.speaker.image;
const images = import.meta.glob<{ default: ImageMetadata }>("../images/speakers/*.{png,jpg,jpeg,svg,webp}");
if (!images[imageURL])
  throw new Error(`"${imageURL}" does not exist in glob: "src/images/speakers/*.{jpeg,jpg,png,gif}"`);
const image = images[imageURL];
---

<div
  class="event-card col-span-12 mb-8 grid grid-cols-subgrid grid-rows-[auto,1fr] bg-gradient-to-r from-[#2F4D78] to-[#28456F] text-white">
  <div class="event-card-image col-span-4 col-start-1 row-span-2 lg:col-span-2">
    <Image src={image()} alt={data.speaker.name} width={200} height={200} class:list={["h-full w-full object-cover"]} />
  </div>
  <div class="event-card-speaker col-span-7 col-start-5 ml-5 py-4 lg:col-span-2 lg:col-start-3 lg:ml-0">
    <h3 class="event-card-speaker-name mb-3 text-xl font-bold">
      {data.speaker.name}
    </h3>
    <p class="event-card-speaker-description font-light">
      {data.speaker.title}
    </p>
  </div>
  <div
    class="event-card-content col-span-7 col-start-5 ml-5 border-t border-t-white border-opacity-50 py-4 lg:col-span-3 lg:col-start-5 lg:ml-0">
    <h3 class="event-card-title mb-3 text-xl font-bold">
      {data.event.title}
    </h3>
    <p class="event-card-description mb-4 leading-tight">
      {data.event.description}
    </p>
    <p class="event-card-time font-medium">
      {data.event.time_start} - {data.event.time_end}
    </p>
  </div>
</div>
<style>
  @media screen and (min-width: 1024px) {
    .event-card-content {
      position: relative;
    }
    .event-card-content::before {
      content: "";
      position: absolute;
      top: 1rem;
      left: -1rem;
      width: 1px;
      height: 80%;
      background-color: white;
    }
  }
  @media screen and (min-width: 1400px) {
    .event-card-content::before {
      left: -2rem;
    }
  }
</style>
